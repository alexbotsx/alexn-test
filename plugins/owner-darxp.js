var handler = async (m, { conn, text, usedPrefix, command }) => {
  let who;
  if (m.isGroup) who = m.mentionedJid[0];
  else who = m.chat;

  if (!who) throw `‚ö†Ô∏è *Debe etiquetar al usuario con *@tag* para usar este comando.*`;

  let txt = text.replace('@' + who.split`@`[0], '').trim();
  if (!txt) throw `‚ö†Ô∏è *Ingrese la cantidad de experiencia (EXP) que desea a√±adir.*`;

  if (isNaN(txt)) throw `‚ö†Ô∏è *Ingrese solo n√∫meros, sin s√≠mbolos ni caracteres especiales.*`;

  try {
    let xp = parseInt(txt);
    if (xp < 1) throw `‚ö†Ô∏è *El n√∫mero m√≠nimo de experiencia (EXP) es 1.*`;

    let users = global.db.data.users;
    users[who].exp += xp;

    conn.reply(
      m.chat,
      `‚ï≠‚îÅ[ *Experiencia A√±adida üí´* ]‚îÅ‚¨£\n` +
      `‚îÉ\n` +
      `‚îÉ·É¶ *Para:*\n` +
      `‚îÉ·É¶ @${who.split`@`[0]}\n` +
      `‚îÉ‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà\n` +
      `‚îÉ·É¶ *Se le a√±adi√≥:*\n` +
      `‚îÉ·É¶ *${xp} EXP* üí´\n` +
      `‚îÉ\n` +
      `‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¨£`,
      m,
      { contextInfo: { mentionedJid: [who] } }
    );
  } catch (e) {
    await conn.reply(
      m.chat,
      `‚ö†Ô∏è *Ocurri√≥ un error al ejecutar el comando. Intente nuevamente o reporte el problema.*\n\n` +
      `*Uso correcto:* ${usedPrefix + command} @usuario cantidad`,
      m
    );
    console.error(`‚ùó Error en el comando ${usedPrefix + command}:`, e);
  }
};

handler.help = ["darxp [@usuario]"];
handler.tags = ["owner"];
handler.command = ["a√±adirxp", "a√±adirexp", "darexperiencia", "darxp", "darexp"];
handler.group = true;
handler.rowner = true;

export default handler;

